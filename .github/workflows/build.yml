name: CI
 
on: push # when to trigger this. Here, on every push
jobs:
  build_and_test:
    name: "Build and test"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] # we build on GitHub-provided Windows and Linux images
    runs-on: ${{ matrix.os }} # use value from the matrix
    steps:
    - name: Install dependencies (linux)
      run: sudo apt install ninja-build
      if: matrix.os == 'ubuntu-latest' # conditional, runs this step only on the Ubuntu runner
    - name: Install Ninja (windows)    # Ninja is not available in GitHub-provided images,
                                       # see https://github.com/actions/runner-images/issues/514
      run: choco install ninja         # So let's install it through Chocolatey
      if: matrix.os == 'windows-latest'
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.2'
    - uses: ilammy/msvc-dev-cmd@v1 # This action essentially calls vcvarsall.bat for the latest VS in the runner for x64
    - uses: actions/checkout@v3    # Actually check out the sources. GH Actions can run for events that may not require
                                   # sources (e.g. when someone comments on an issue)

    # Here we call CMake manually, there are solutions for that in the Marketplace: https://github.com/marketplace/actions/run-cmake
    - name: Build
      # We don't need to set up the environment variable for CMake to see Qt because the install-qt-action
      # sets up the necessary variables automatically
      #run: cmake -S . -B build -G "Ninja Multi-Config" && cmake --build build --config Debug
      run: mkdir ./Signal_Analyzer/build && cd ./Signal_Analyzer/build && cmake -S ../ -G "Ninja" && cmake --build ./ #&& cmake -S . -G "Ninja"

    - name: GitHub Push
  # You may pin to the exact commit or the version.
  # uses: ad-m/github-push-action@40bf560936a8022e68a3c00e7d2abefaf01305a6
      uses: ad-m/github-push-action@v0.6.0
      with:
    # Token for the repo. Can be passed in using $\{{ secrets.GITHUB_TOKEN }}
        github_token: $\{{ secrets.GITHUB_TOKEN }}
    # Repository name to push. Default or empty value represents current github repository (${GITHUB_REPOSITORY})
        #repository: # optional, default is 
    # Destination branch to push changes
        branch: release # optional, default is master
    # Determines if force push is used
        #force: # optional
    # Determines if --tags is used
        #tags: # optional
    # Directory to change to before pushing.
        #directory: # optional, default is .
